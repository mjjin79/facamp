// 1. 다음 중 올바르지 않은 함수 이름을 모두 고르세요.
// $$ _abc_ 함.수 92 M25
console.log('1번');
console.log('함.수, 92');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 2. 빈 코드를 채워서 다음 코드가 정상적으로 실행되도록 만드세요.
// // 이 위에 코드를 입력하세요.
console.log('2번');

var teamMates = [{name: '오상식'}, {name: '김동식'}, {name: '장그래'}];
console.log( teamMates[0]['name'] ); // 오상식
console.log( teamMates[1]['name'] ); // 김동식
console.log( teamMates[2]['name'] ); // 장그래

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 3. 인덱스나 점 문법은 함수에서 반환한 값에도 바로 사용할 수 있습니다. 다음과 같이 전달한 인수가 반환된 오브젝트의 value 프로퍼티에 저장되는 함수 fx를 작성하세요.
// // 이 위에 fx 함수를 선언하세요.
console.log('3번');

function fx(num) {
	return {value: num};
}
console.log( fx(5)['value'] ); // 5 출력
console.log( fx(10)['value'] ); // 10 출력


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 4. 다음 코드의 출력값은?
console.log('4번');

var myName;
console.log('myName' in window);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 5. 다음 중 true인 듯 취급되는 값을 모두 고르세요.
// a. -1
// b. []
// c. 빈 문자열 ""
// d. null
// e. undefined

console.log('5번');

if(-1) {
	console.log('-1 은 truthy');
}

if([]) {
	console.log('[] 는 truthy');
}

if("") {
	console.log('"" 은 truthy');
}

if(null) {
	console.log('null 은 truthy');
}

if(-undefined) {
	console.log('undefined 는 truthy');
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 6. var num1 = 10, num2 = 20, num3 = 30; 일 때 다음 표현식 중 반환하는 값이 false 혹은 false처럼 취급되는 것을 모두 고르세요.

// a. num1 >= 15
// b. !(num2 && num3)
// c. (num1 - 10) ? num2 : num3;
// d. num2 || false
// e. (num2 < 25) || (num3 > 35)
// f. num3 === '30'

console.log('6번');

var num1 = 10, num2 = 20, num3 = 30;

if(!(num1 >= 15)) {
	console.log('num1 >= 15 은 falsy');
}

if(!(!(num2 && num3))) {
	console.log('!(num2 && num3) 은 falsy');
}

if(!((num1 - 10) ? num2 : num3)) {
	console.log('(num1 - 10) ? num2 : num3; 은 falsy');
}

if(!(num2 || false)) {
	console.log('num2 || false 은 falsy');
}

if(!((num2 < 25) || (num3 > 35))) {
	console.log('(num2 < 25) || (num3 > 35) 은 falsy');
}

if(!(num3 === '30')) {
	console.log("num3 === '30' 은 falsy");
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 7. 첫 번째 인수로 전달된 문자열을 두 번째 인수로 전달된 숫자만큼 반복해서 반환하는 "잔소리" 함수를 작성하세요. 반복하는 말 사이에는 쉼표를 추가하세요.
// 잔소리("방 좀 치워", 3); // "방 좀 치워,방 좀 치워,방 좀 치워"
// 잔소리("공부는 언제 할래"); // "공부는 언제 할래"
// 잔소리("이제 자야지", 2); // "이제 자야지,이제 자야지"

console.log('7번');

function 잔소리 (str, num) {
	var ret = "";
	ret += str;
	if(num === parseInt(num, 10) && num) {
		for(var i = 0; i < num-1; i++) {
			ret += ',' + str;
		}
	}
	return ret;
}

console.log(잔소리("방 좀 치워", 3)); // "방 좀 치워,방 좀 치워,방 좀 치워"
console.log(잔소리("공부는 언제 할래")); // "공부는 언제 할래"
console.log(잔소리("이제 자야지", 2)); // "이제 자야지,이제 자야지"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 8. 실행하면 문자열에 포함된 단어의 갯수를 반환하는 wordCount() 메소드를 String 타입에 추가하세요. 단어는 공백(스페이스) 한 개를 기준으로 구분된다고 가정합니다.
// // 동작 예
// "".wordCount(); // 0 반환
// "인터스텔라".wordCount(); // 1 반환
// "나를 찾아줘".wordCount(); // 2 반환
// "동해물과 백두산이 마르고 닳도록".wordCount(); // 4 반환

console.log('8번');

String.prototype.wordCount = function() {
	if(this.length !== 0) {
		return this.split(" ").length;
	} else {
		return 0;
	}
}

console.log("".wordCount()); // 0 반환
console.log("인터스텔라".wordCount()); // 1 반환
console.log("나를 찾아줘".wordCount()); // 2 반환
console.log("동해물과 백두산이 마르고 닳도록".wordCount()); // 4 반환

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 9. Date 타입에 실행하면 "xxxx년 x월 x일 x요일"과 같은 문자열을 콘솔에 출력하는read() 메소드를 정의하라.
// var date = new Date(2014, 10, 23);
// date.read(); // 콘솔에 "2014년 11월 23일 일요일" 출력

console.log('9번');

Date.prototype.read = function() {
	return `${this.getFullYear() }년 ${this.getMonth() + 1}월 ${this.getDate() }일 ${'일월화수목금토'[this.getDay()]}요일`;
}

var date = new Date(2014, 10, 23);
console.log(date.read()); // 콘솔에 "2014년 11월 23일 일요일" 출력